// This file has been generated by the reflectable package.
// https://github.com/dart-lang/reflectable.
// @dart = 2.9

import 'dart:core';
import 'hyrule_cli.dart' as prefix1;
import 'package:smart_arg/src/boolean_argument.dart' as prefix6;
import 'package:smart_arg/src/directory_argument.dart' as prefix4;
import 'package:smart_arg/src/file_argument.dart' as prefix5;
import 'package:smart_arg/src/help_argument.dart' as prefix7;
import 'package:smart_arg/src/parser.dart' as prefix3;
import 'package:smart_arg/src/reflector.dart' as prefix0;
import 'package:smart_arg/src/smart_arg.dart' as prefix2;

// ignore_for_file: camel_case_types
// ignore_for_file: implementation_imports
// ignore_for_file: prefer_adjacent_string_concatenation
// ignore_for_file: prefer_collection_literals
// ignore_for_file: unnecessary_const

// ignore:unused_import
import 'package:reflectable/mirrors.dart' as m;
// ignore:unused_import
import 'package:reflectable/src/reflectable_builder_based.dart' as r;
// ignore:unused_import
import 'package:reflectable/reflectable.dart' as r show Reflectable;

final _data = <r.Reflectable, r.ReflectorData>{
  const prefix0.Reflector(): r.ReflectorData(
      <m.TypeMirror>[
        r.NonGenericClassMirrorImpl(
            r'Args',
            r'.Args',
            134217735,
            0,
            const prefix0.Reflector(),
            const <int>[0, 1, 2, 3, 12],
            const <int>[
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11
            ],
            const <int>[],
            -1,
            {},
            {},
            {r'': (bool b) => () => b ? prefix1.Args() : null},
            -1,
            -1,
            const <int>[-1],
            const <Object>[
              prefix2.SmartArg.reflectable,
              const prefix3.Parser(
                  description:
                      'hyrule-cli - a CLI for uploading files to hyrule.pics on UNIX systems')
            ],
            null)
      ],
      <m.DeclarationMirror>[
        r.VariableMirrorImpl(r'watch', 134348805, 0, const prefix0.Reflector(),
            -1, -1, -1, null, const <Object>[
          const prefix4.DirectoryArgument(
              help: "enable watch mode in the directory you specify",
              short: "w")
        ]),
        r.VariableMirrorImpl(r'configFile', 134348805, 0,
            const prefix0.Reflector(), -1, -1, -1, null, const <Object>[
          const prefix5.FileArgument(help: "the config file to use")
        ]),
        r.VariableMirrorImpl(r'copy', 134348805, 0, const prefix0.Reflector(),
            -1, -1, -1, null, const <Object>[
          const prefix6.BooleanArgument(
              help: "enable copying instead of printing to stdout")
        ]),
        r.VariableMirrorImpl(r'help', 134348805, 0, const prefix0.Reflector(),
            -1, -1, -1, null, const <Object>[const prefix7.HelpArgument()]),
        r.ImplicitGetterMirrorImpl(const prefix0.Reflector(), 0, 4),
        r.ImplicitSetterMirrorImpl(const prefix0.Reflector(), 0, 5),
        r.ImplicitGetterMirrorImpl(const prefix0.Reflector(), 1, 6),
        r.ImplicitSetterMirrorImpl(const prefix0.Reflector(), 1, 7),
        r.ImplicitGetterMirrorImpl(const prefix0.Reflector(), 2, 8),
        r.ImplicitSetterMirrorImpl(const prefix0.Reflector(), 2, 9),
        r.ImplicitGetterMirrorImpl(const prefix0.Reflector(), 3, 10),
        r.ImplicitSetterMirrorImpl(const prefix0.Reflector(), 3, 11),
        r.MethodMirrorImpl(r'', 64, 0, -1, -1, -1, null, const <int>[],
            const prefix0.Reflector(), const []),
        r.MethodMirrorImpl(r'==', 2097154, -1, -1, -1, -1, null, const <int>[4],
            const prefix0.Reflector(), const []),
        r.MethodMirrorImpl(r'toString', 2097154, -1, -1, -1, -1, null,
            const <int>[], const prefix0.Reflector(), const []),
        r.MethodMirrorImpl(r'noSuchMethod', 524290, -1, -1, -1, -1, null,
            const <int>[5], const prefix0.Reflector(), const []),
        r.MethodMirrorImpl(r'hashCode', 2097155, -1, -1, -1, -1, null,
            const <int>[], const prefix0.Reflector(), const []),
        r.MethodMirrorImpl(r'runtimeType', 2097155, -1, -1, -1, -1, null,
            const <int>[], const prefix0.Reflector(), const []),
        r.MethodMirrorImpl(r'parse', 1310722, -1, -1, -1, -1, null,
            const <int>[6], const prefix0.Reflector(), const []),
        r.MethodMirrorImpl(r'usage', 2097154, -1, -1, -1, -1, null,
            const <int>[], const prefix0.Reflector(), const []),
        r.MethodMirrorImpl(r'withEnvironment', 1310722, -1, -1, -1, -1, null,
            const <int>[7], const prefix0.Reflector(), const []),
        r.MethodMirrorImpl(r'beforeCommandParse', 1310722, -1, -1, -1, -1, null,
            const <int>[8, 9], const prefix0.Reflector(), const []),
        r.MethodMirrorImpl(r'beforeCommandExecute', 1310722, -1, -1, -1, -1,
            null, const <int>[10], const prefix0.Reflector(), const []),
        r.MethodMirrorImpl(r'afterCommandExecute', 1310722, -1, -1, -1, -1,
            null, const <int>[11], const prefix0.Reflector(), const []),
        r.MethodMirrorImpl(r'extras', 35651587, -1, -1, -1, -1, null,
            const <int>[], const prefix0.Reflector(), const [])
      ],
      <m.ParameterMirror>[
        r.ParameterMirrorImpl(r'_watch', 134348902, 5,
            const prefix0.Reflector(), -1, -1, -1, null, const [], null, null),
        r.ParameterMirrorImpl(r'_configFile', 134348902, 7,
            const prefix0.Reflector(), -1, -1, -1, null, const [], null, null),
        r.ParameterMirrorImpl(r'_copy', 134348902, 9, const prefix0.Reflector(),
            -1, -1, -1, null, const [], null, null),
        r.ParameterMirrorImpl(r'_help', 134348902, 11,
            const prefix0.Reflector(), -1, -1, -1, null, const [], null, null),
        r.ParameterMirrorImpl(r'other', 134348806, 13,
            const prefix0.Reflector(), -1, -1, -1, null, const [], null, null),
        r.ParameterMirrorImpl(r'invocation', 134348806, 15,
            const prefix0.Reflector(), -1, -1, -1, null, const [], null, null),
        r.ParameterMirrorImpl(r'arguments', 151126022, 18,
            const prefix0.Reflector(), -1, -1, -1, null, const [], null, null),
        r.ParameterMirrorImpl(r'environment', 151126022, 20,
            const prefix0.Reflector(), -1, -1, -1, null, const [], null, null),
        r.ParameterMirrorImpl(r'command', 134348806, 21,
            const prefix0.Reflector(), -1, -1, -1, null, const [], null, null),
        r.ParameterMirrorImpl(r'arguments', 151126022, 21,
            const prefix0.Reflector(), -1, -1, -1, null, const [], null, null),
        r.ParameterMirrorImpl(r'command', 134348806, 22,
            const prefix0.Reflector(), -1, -1, -1, null, const [], null, null),
        r.ParameterMirrorImpl(r'command', 134348806, 23,
            const prefix0.Reflector(), -1, -1, -1, null, const [], null, null)
      ],
      <Type>[prefix1.Args],
      1,
      {
        r'==': (dynamic instance) => (x) => instance == x,
        r'toString': (dynamic instance) => instance.toString,
        r'noSuchMethod': (dynamic instance) => instance.noSuchMethod,
        r'hashCode': (dynamic instance) => instance.hashCode,
        r'runtimeType': (dynamic instance) => instance.runtimeType,
        r'parse': (dynamic instance) => instance.parse,
        r'usage': (dynamic instance) => instance.usage,
        r'withEnvironment': (dynamic instance) => instance.withEnvironment,
        r'beforeCommandParse': (dynamic instance) =>
            instance.beforeCommandParse,
        r'beforeCommandExecute': (dynamic instance) =>
            instance.beforeCommandExecute,
        r'afterCommandExecute': (dynamic instance) =>
            instance.afterCommandExecute,
        r'extras': (dynamic instance) => instance.extras,
        r'watch': (dynamic instance) => instance.watch,
        r'configFile': (dynamic instance) => instance.configFile,
        r'copy': (dynamic instance) => instance.copy,
        r'help': (dynamic instance) => instance.help
      },
      {
        r'watch=': (dynamic instance, value) => instance.watch = value,
        r'configFile=': (dynamic instance, value) =>
            instance.configFile = value,
        r'copy=': (dynamic instance, value) => instance.copy = value,
        r'help=': (dynamic instance, value) => instance.help = value
      },
      null,
      [])
};

final _memberSymbolMap = null;

void initializeReflectable() {
  r.data = _data;
  r.memberSymbolMap = _memberSymbolMap;
}
